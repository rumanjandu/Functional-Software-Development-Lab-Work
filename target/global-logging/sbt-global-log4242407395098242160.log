[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\ruman\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\ruman\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (IBM Corporation Java 11.0.17)
[debug]       Load.loadUnit: plugins took 43.3149ms
[debug]       Load.loadUnit: defsScala took 0.1262ms
[debug] [Loading] Scanning directory C:\Users\ruman\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ruman\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.0574 ms
[debug]           Load.resolveProject(global-plugins) took 22.9936ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\ruman\.sbt\1.0\plugins, plugins: List(<none>))) took 42.3815ms
[debug] [Loading] Done in C:\Users\ruman\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 53.8982ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1108ms
[debug]     Load.loadUnit(file:/C:/Users/ruman/.sbt/1.0/plugins/, ...) took 101.4976ms
[debug]   Load.apply: load took 214.0171ms
[debug]   Load.apply: resolveProjects took 2.9791ms
[debug]   Load.apply: finalTransforms took 66.9792ms
[debug]   Load.apply: config.delegates took 3.0906ms
[debug]   Load.apply: Def.make(settings)... took 440.9185ms
[debug]   Load.apply: structureIndex took 103.9267ms
[debug]   Load.apply: mkStreams took 0.8723ms
[info] loading global plugins from C:\Users\ruman\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4369.606ms
[debug]           Load.loadUnit: plugins took 11.5061ms
[debug]           Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory C:\Users\ruman\IdeaProjects\CTEC3904\CTEC3904\project
[debug]             Load.loadUnit: mkEval took 2.6396ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ruman\IdeaProjects\CTEC3904\CTEC3904\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2686 ms
[info] loading settings for project ctec3904-build from idea.sbt ...
[debug]               Load.resolveProject(ctec3904-build) took 1.8024ms
[debug]             Load.loadTransitive: finalizeProject(Project(id ctec3904-build, base: C:\Users\ruman\IdeaProjects\CTEC3904\CTEC3904\project, plugins: List(<none>))) took 3.3595ms
[debug] [Loading] Done in C:\Users\ruman\IdeaProjects\CTEC3904\CTEC3904\project, returning: (ctec3904-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1632.0257ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.0133ms
[debug]         Load.loadUnit(file:/C:/Users/ruman/IdeaProjects/CTEC3904/CTEC3904/project/, ...) took 1646.0892ms
[debug]       Load.apply: load took 1647.4309ms
[debug]       Load.apply: resolveProjects took 0.065ms
[debug]       Load.apply: finalTransforms took 10.5925ms
[debug]       Load.apply: config.delegates took 0.2356ms
[debug]       Load.apply: Def.make(settings)... took 81.1019ms
[debug]       Load.apply: structureIndex took 32.5767ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\ruman\IdeaProjects\CTEC3904\CTEC3904\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3022.2069ms
[debug]     Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory C:\Users\ruman\IdeaProjects\CTEC3904\CTEC3904
[debug]       Load.loadUnit: mkEval took 0.1815ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.0485 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 16.2324ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\ruman\IdeaProjects\CTEC3904\CTEC3904, plugins: List(<none>))) took 19.166ms
[debug] [Loading] Done in C:\Users\ruman\IdeaProjects\CTEC3904\CTEC3904, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 865.8348ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.6123ms
[debug]   Load.loadUnit(file:/C:/Users/ruman/IdeaProjects/CTEC3904/CTEC3904/, ...) took 3892.0535ms
[debug] Load.apply: load took 3893.3713ms
[debug] Load.apply: resolveProjects took 0.0761ms
[debug] Load.apply: finalTransforms took 18.8042ms
[debug] Load.apply: config.delegates took 0.2516ms
[debug] Load.apply: Def.make(settings)... took 98.2956ms
[debug] Load.apply: structureIndex took 46.329ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to CTEC3904 (in build file:/C:/Users/ruman/IdeaProjects/CTEC3904/CTEC3904/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59591 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59591, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to CTEC3904 (in build file:/C:/Users/ruman/IdeaProjects/CTEC3904/CTEC3904/)
[debug] > Exec(idea-shell, None, None)
